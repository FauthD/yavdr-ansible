---
# file: group_vars/all

branch: experimental
ppa_owner: 'ppa:yavdr'
# add the following PPAs
repositories:
  - '{{ ppa_owner }}/{{branch}}-main'
  - '{{ ppa_owner }}/{{branch}}-vdr'
  - '{{ ppa_owner }}/{{branch}}-kodi'
  #- '{{ ppa_owner }}/{{branch}}-yavdr'
# properties of the user vdr and vdr-related options
# NOTE: user name, uid and confdir must match the values set by the vdr package
vdr:
  user: vdr
  group: vdr
  uid: 666
  gid: 666
  home: /var/lib/vdr
  etc_confdir: /etc/vdr
  confdir: /var/lib/vdr
  recdir: /srv/vdr/video
  hide_first_recording_level: false
  safe_dirnames: true  # escape characters (useful for windows clients and FAT/NTFS file systems)
  override_vdr_charset: ""  # set the desired charset, e.g. "ISO-8859-9"

# copy channels.conf from a local file
# vdr_channels_conf: /path/to/channels.conf

# download channels.conf from a given url (supports HTTP(S) and FTP)
# vdr_channels_conf_url: http://example.com/vdr/channels.conf

# add the vdr plugins you want to install
vdr_plugins:
  - vdr-plugin-devstatus
  - vdr-plugin-markad
  - vdr-plugin-softhddevice

# IP (range) filter for vdr and plugins (this must be an array):
# vdr_allowed_hosts:
#   - 192.168.0.0/24
#
# hosts and subnets for svdrphosts.conf (overrides vdr_allowed_hosts):
# vdr_svdrphosts:
#   - 192.168.0.0/24
#
# hosts and subnets for allowed_hosts.conf of xineliboutput (overrides vdr_allowed_hosts):
# xineliboutput_allowed_hosts:
#   - 192.168.0.0/24
#
# hosts and subnets for allowed_hosts.conf of vnsiserver (overrides vdr_allowed_hosts):
# vnsiserver_allowed_hosts:
#   - 192.168.0.0/24
#
# hosts and subnets for streamdevhosts.conf (overrides vdr_allowed_hosts):
# streamdev_server_allowed_hosts:
#   - 192.168.0.0/24
# dictionary of directories for (shared) files. Automatically exported via NFS and Samba if those roles are enabled
media_dirs:
  audio: /srv/audio
  video: /srv/video
  pictures: /srv/picture
  files: /srv/files
  backups: /srv/backups
  recordings: '{{ vdr.recdir }}'
nfs:
  insecure: false  # set to true for OS X clients or if you plan to use libnfs as unprivileged user (e.g. KODI)
samba:
  workgroup: YAVDR
  windows_compatible: '{{ vdr.safe_dirnames }}'  # set to true to disable unix extensions, enable follow symlinks and wide links
# additional packages you want to install
extra_packages:
  - bpython
  - bpython3
  - htop
  - tree
  - vim
  - w-scan
  - t2scan
  - plymouth-theme-yavdr-logo
  - vdrpbd
frontend: vdr

# vdr shutdown command - SHUTDOWNCMD variable in /etc/default/vdr
# for standby use "/bin/systemctl suspend"
vdr_shutdown_command: poweroff

# to force quadratic pixels set this variable to the dpi you want
# nvidia_force_dpi: 96

#system:
#  shutdown: poweroff

# choose one of acpiwakeup, stm32wakeup
wakeup_method: acpiwakeup
# start given number of minutes earlier than the wakeuptime set by vdr
wakeup_start_ahead: 5
# set days of the week for automatic wakeup (1=Monday...7=Sunday),
# set empty string to disable wakeup
# eg. to wake up on Monday and Friday:
# wakeup_days: "1 5"
wakeup_days: ""
# set wakeup time for automatic wakeup
# set empty string to disable
# e.g. for wakeup at midnight:
# wakeup_time: "00:00"
wakeup_time: ""

# settings for grub
grub:
  timeout: 0
  boot_options: quiet splash

# unload dvb drivers before standby, reload them afterwards.
# disable this setting if
# - you don't have local dvb devices (e.g. satip client)
# - your dvb drivers have problems being unloaded
standby_reload_dvb: true
# Serial device to configure for a homebrew receiver.
# Choose either ttyS0 (COM1) or ttyS1 (COM2)
# Also ensure that the role serial-ir is enabled in yavdr07.yml
serial_ir_device: ttyS0
